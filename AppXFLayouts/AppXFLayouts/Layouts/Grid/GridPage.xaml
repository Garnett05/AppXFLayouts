<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             x:Class="AppXFLayouts.Layouts.Grid.GridPage">
    <ContentPage.Content>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition  Width="150" /> <!-- Define um tamanho -->
                <ColumnDefinition Width="Auto"  /> <!-- Define que o tamanho será automático de acordo com o conteúdo -->
                <ColumnDefinition Width="*" /> <!-- Pegará todo o tamanho. Funcionamento semelhante ao 'FillAndExpend' -->
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="100" />
                <RowDefinition Height="100" />
                <RowDefinition Height="100" />
                <RowDefinition Height="100" />                
            </Grid.RowDefinitions>

            <BoxView Grid.Column="0" Grid.Row="0" BackgroundColor="Red" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" />
            
            <BoxView Grid.Column="2" Grid.Row="0" BackgroundColor="Blue" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" />

            <BoxView Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" BackgroundColor="Yellow" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" />
            <BoxView Grid.Column="0" Grid.Row="2" Grid.RowSpan="2" BackgroundColor="Green" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" />            
            
            <!-- Oq foi feito nos elementos acima: 
                 1 - Elemento red ocupa  o grid 0x0
                 2 - Elemento blue ocupa o grid 0x2. Como não há nada no 0x1, o sistema expande este conteúdo para lá também
                 3 - Elemento yellow ocupa toda a linha 1. Este comportamento é decorrente do 'Grid.ColumnSpan' que faz com que o conteúdo seja extendido por toda a linha
                 4 - Elemento green ocupa as linhas 2 e 3, na coluna 0. Este comportamento é decorrente do 'Grid.RowSpan' que extende o conteúdo para ocupar 2 linhas
            -->

        </Grid>
    </ContentPage.Content>
</ContentPage>